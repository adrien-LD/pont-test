{"version":3,"sources":["../../src/main/activate.js"],"names":["vscode","Path","FSExtra","getProjectRoot","readJSONFile","sendErrorMessage","openSelect","writeFile","sendMessage","getHttpRequest","parse","PROJECT_FUNCTION","PROJECT_CONFIG","packageInfo","CONFIG_PATH","DEFAULT_PARSE_PATH","BASE_CATCH_PATH","CATCH_PATH","version","getOriginPick","config","originPickItems","origins","map","ori","label","name","description","originUrl","services","type","origin","Error","getServicePick","servicePickItems","serv","appId","detail","serve","old","service","getInterfacePick","interfaceList","interfacePickItems","inter","path","funDesc","funName","interfaceInfo","getServiceInfo","originName","serviceName","serviceAppId","serviceServe","trim","toLowerCase","httpPath","data","getTempPick","temps","tempPickItems","item","temp","root","resolve","require","cache","func","execTempFun","fun","param","result","error","toString","getInterfaceUnExistDepandenceDocStr","dependences","fileText","defObject","lines","split","existList","results","forEach","line","lineInfo","exec","push","groups","dep","includes","defStr","join","getAllTypeDefStr","resultList","key","hasOwnProperty","element","activate","context","contextDisposable","commands","registerTextEditorCommand","textEditor","edit","rootPath","catchFilePath","existsSync","serviceInfo","JSON","stringify","interfacePick","tempFunc","serviceConfig","typeRefStr","depadences","document","getText","insertStr","insertSnippet","SnippetString","initDisposable","registerCommand","configPath","defaultParePath","cleanDisposable","cleanPath","removeSync","allTypedefDisposable","window","activeTextEditor","allTypedefStr","subscriptions"],"mappings":"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","sourcesContent":["import vscode from 'vscode';\nimport Path from 'path';\nimport FSExtra from 'fs-extra';\nimport {\n  getProjectRoot,\n  readJSONFile,\n  sendErrorMessage,\n  openSelect,\n  writeFile,\n  sendMessage,\n} from '../utils';\nimport getHttpRequest from '../request';\nimport parse from '../parse';\nimport {\n  PROJECT_FUNCTION,\n  PROJECT_CONFIG,\n} from '../config';\nimport packageInfo from '../../package.json';\n\nconst CONFIG_PATH = './duoduo/duoduo.request.json';\nconst DEFAULT_PARSE_PATH = './duoduo/duoduo.request.js';\nconst BASE_CATCH_PATH = './.vscode/duoduo';\nconst CATCH_PATH = `${BASE_CATCH_PATH}/v${packageInfo.version}`;\n\nasync function getOriginPick(config) {\n  const originPickItems = config.origins.map((ori) => ({\n    label: ori.name,\n    description: ori.originUrl,\n    services: ori.services,\n    type: ori.type,\n  }));\n  const origin = await openSelect(originPickItems);\n  if (!origin) {\n    throw new Error('组织选择被取消');\n  }\n  return origin;\n}\n\nasync function getServicePick(services) {\n  const servicePickItems = services.map((serv) => ({\n    label: serv.name,\n    description: serv.appId,\n    detail: serv.serve,\n    old: { ...serv },\n  }));\n  const service = await openSelect(servicePickItems);\n  if (!service) {\n    throw new Error('服务选择被取消');\n  }\n  return service;\n}\n\nasync function getInterfacePick(interfaceList) {\n  const interfacePickItems = interfaceList.map((inter) => ({\n    label: inter.path,\n    description: inter.funDesc,\n    detail: inter.funName,\n    inter,\n  }));\n  const interfaceInfo = await openSelect(interfacePickItems);\n  if (!interfaceInfo) {\n    throw new Error('接口选择被取消');\n  }\n  return interfaceInfo;\n}\n\nasync function getServiceInfo(origin, service) {\n  const {\n    label: originName,\n    description: originUrl,\n    type,\n  } = origin;\n\n  const {\n    label: serviceName,\n    description: serviceAppId,\n    detail: serviceServe,\n  } = service;\n  // 获取信息\n  let httpPath;\n  if (type.trim().toLowerCase() === 'swagger2.0') {\n    httpPath = `${originUrl}docs` + `/${serviceAppId}`;\n  }\n  switch (type.trim().toLowerCase()) {\n    case 'swagger2.0':\n      httpPath = `${originUrl}docs` + `/${serviceAppId}`;\n      break;\n    case 'tp-doc':\n      httpPath = `${originUrl}api/doc/${serviceServe}:${serviceAppId}/`;\n      break;\n\n    default:\n      throw new Error('配置文件有误，请重新初始化！');\n  }\n  const data = await getHttpRequest(httpPath);\n  return data;\n}\n\nasync function getTempPick(config) {\n  const {\n    temps = [],\n  } = config;\n\n  const tempPickItems = temps.map((item) => ({\n    label: item.name,\n    path: item.path,\n  }));\n  const temp = await openSelect(tempPickItems);\n\n  if (!temp) {\n    throw new Error('模板选择被取消');\n  }\n\n  const root = getProjectRoot();\n  const path = Path.resolve(root, temp.path);\n  // 去除缓存\n  delete require.cache[require.resolve(path)];\n  const func = require(path);\n\n  return func;\n}\n\n/**\n * 执行模板方法\n * @param {Function} fun 模板方法\n * @param {any} param 方法参数\n */\nfunction execTempFun(fun, param) {\n  try {\n    const result = fun(param);\n    return result;\n  } catch (error) {\n    throw new Error(`模板文件错误:${error.toString()}`);\n  }\n}\n\n/**\n * 获取当前文件不存在的依赖的doc字符串\n * @param {object[]} dependences 依赖列表\n * @param {String} fileText 当前文件的内容\n * @param {object} defObject 类型定义对象\n */\nfunction getInterfaceUnExistDepandenceDocStr(dependences, fileText, defObject) {\n  const lines = fileText.split('\\n');\n  const existList = [];\n  const results = [];\n  lines.forEach((line) => {\n    const lineInfo = (/\\*\\s+\\@typedef\\s+(?<type>\\S*).*$/g).exec(line);\n    if (lineInfo) {\n      existList.push(lineInfo.groups.type);\n    }\n  });\n\n  dependences.forEach((dep) => {\n    if (!existList.includes(dep)) {\n      results.push(defObject[dep].defStr);\n    }\n  });\n\n  return results.join('\\n');\n}\n\n/**\n * 获取所有的typedef\n * @param {Object} defObject 类型定义对象\n */\nfunction getAllTypeDefStr(defObject) {\n  const resultList = [];\n\n  for (const key in defObject) {\n    if (defObject.hasOwnProperty(key)) {\n      if (defObject[key]) {\n        const element = defObject[key].defStr;\n        resultList.push(element);\n      }\n    }\n  }\n\n  return resultList.join('\\n');\n}\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nexport default async function activate(context) {\n  // 插入单个接口\n  const contextDisposable = vscode.commands.registerTextEditorCommand('duoduorequest.insertModuleRequest', async (textEditor, edit) => {\n    try {\n      const rootPath = getProjectRoot();\n      const config = await readJSONFile(Path.resolve(rootPath, CONFIG_PATH));\n      // 确定本次获取的组织\n      const origin = await getOriginPick(config);\n      const {\n        type,\n        services,\n      } = origin;\n      // 确定本次生成的服务\n      const service = await getServicePick(services);\n\n      // 获取接口信息\n      /**\n       * @type {import('../parse').ParseInfo}\n       */\n      let interfaceInfo;\n      const catchFilePath = Path.resolve(rootPath, CATCH_PATH, `${service.description}.json`);\n      if (FSExtra.existsSync(catchFilePath)) {\n        interfaceInfo = await readJSONFile(catchFilePath);\n      } else {\n        // 获取接口信息\n        const serviceInfo = await getServiceInfo(origin, service);\n        // 解析对应接口信息\n        interfaceInfo = parse(serviceInfo, type);\n        // 存储接口信息\n        writeFile(catchFilePath, JSON.stringify(interfaceInfo));\n      }\n\n      // 选择对应接口\n      const {\n        interfaceList,\n      } = interfaceInfo;\n      const interfacePick = await getInterfacePick(interfaceList);\n      const {\n        inter,\n      } = interfacePick;\n      // 选择对应的模板\n      const tempFunc = await getTempPick(config);\n      // 将所选服务配置添加进去\n      inter.serviceConfig = service.old;\n      // 根据当前文件情况处理接口信息\n      inter.typeRefStr = getInterfaceUnExistDepandenceDocStr(\n        inter.depadences, textEditor.document.getText(), interfaceInfo.defObject,\n      );\n      // 根据选择的模板生成字符串\n      const insertStr = execTempFun(tempFunc, inter);\n      // 将字符串插入当前位置\n      textEditor.insertSnippet(new vscode.SnippetString(insertStr));\n    } catch (err) {\n      sendErrorMessage(err.toString());\n    }\n  });\n\n  // 初始化配置\n  const initDisposable = vscode.commands.registerCommand('duoduorequest.insertConfig', async () => {\n    const rootPath = getProjectRoot();\n    const configPath = Path.resolve(rootPath, CONFIG_PATH);\n    const defaultParePath = Path.resolve(rootPath, DEFAULT_PARSE_PATH);\n    if (FSExtra.existsSync(configPath)) {\n      sendErrorMessage('配置文件已存在');\n      return;\n    }\n\n    writeFile(configPath, PROJECT_CONFIG);\n\n    writeFile(defaultParePath, PROJECT_FUNCTION);\n  });\n\n  // 清除缓存\n  const cleanDisposable = vscode.commands.registerCommand('duoduorequest.cleanCatch', async () => {\n    const rootPath = getProjectRoot();\n    const cleanPath = Path.resolve(rootPath, BASE_CATCH_PATH);\n\n    FSExtra.removeSync(cleanPath);\n\n    sendMessage('缓存清除成功！');\n  });\n\n  // 插入所有typedef\n  const allTypedefDisposable = vscode.commands.registerCommand('duoduorequest.insertAllTypedef', async () => {\n    try {\n      const textEditor = vscode.window.activeTextEditor;\n      const rootPath = getProjectRoot();\n      const config = await readJSONFile(Path.resolve(rootPath, CONFIG_PATH));\n      // 确定本次获取的组织\n      const origin = await getOriginPick(config);\n      const {\n        type,\n        services,\n      } = origin;\n      // 确定本次生成的服务\n      const service = await getServicePick(services);\n\n      // 获取接口信息\n      /**\n       * @type {import('../parse').ParseInfo}\n       */\n      let interfaceInfo;\n      const catchFilePath = Path.resolve(rootPath, CATCH_PATH, `${service.description}.json`);\n      if (FSExtra.existsSync(catchFilePath)) {\n        interfaceInfo = await readJSONFile(catchFilePath);\n      } else {\n        // 获取接口信息\n        const serviceInfo = await getServiceInfo(origin, service);\n        // 解析对应接口信息\n        interfaceInfo = parse(serviceInfo, type);\n        // 存储接口信息\n        writeFile(catchFilePath, JSON.stringify(interfaceInfo));\n      }\n\n      const { defObject } = interfaceInfo;\n      // 所有typedef\n      const allTypedefStr = getAllTypeDefStr(defObject);\n      // 插入到当前位置\n      textEditor.insertSnippet(new vscode.SnippetString(allTypedefStr));\n    } catch (err) {\n      sendErrorMessage(err.toString());\n    }\n  });\n  context.subscriptions.push(contextDisposable);\n  context.subscriptions.push(initDisposable);\n  context.subscriptions.push(cleanDisposable);\n  context.subscriptions.push(allTypedefDisposable);\n}\n"],"file":"activate.js"}