{"version":3,"sources":["../../../src/parse/tpdoc/jsdocParse.js"],"names":["translateType","deepStringify","refs","defObject","exist","result","forEach","ref","def","push","dependenceList","concat","jsdocParse","funDesc","parameters","responses","parameDocList","item","type","entityName","typeResult","replace","dependence","paramStr","name","comment","returnTypeResult","returnType","typedefNameList","paramsReturnLead","join"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,SAA7B,EAAoD;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAClD,MAAIC,MAAM,GAAG,EAAb;AACAH,EAAAA,IAAI,CAACI,OAAL,CAAa,UAACC,GAAD,EAAS;AACpB,QAAI,CAACH,KAAK,CAACG,GAAD,CAAV,EAAiB;AACf,UAAMC,GAAG,GAAGL,SAAS,CAACI,GAAD,CAArB;AACAH,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAa,IAAb;;AACA,UAAIC,GAAJ,EAAS;AACPH,QAAAA,MAAM,CAACI,IAAP,CAAYF,GAAZ;AACAF,QAAAA,MAAM,GAAGJ,aAAa,CAACO,GAAG,CAACE,cAAL,EAAqBP,SAArB,EAAgCC,KAAhC,CAAb,CAAoDO,MAApD,CAA2DN,MAA3D,CAAT;AACD;AACF;AACF,GATD;AAUA,SAAOA,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASO,UAAT,CAAoBC,OAApB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoDZ,SAApD,EAA+D;AAC5E,MAAMa,aAAa,GAAG,EAAtB;AACA,MAAId,IAAI,GAAG,EAAX,CAF4E,CAI5E;;AACAY,EAAAA,UAAU,CAACR,OAAX,CAAmB,UAACW,IAAD,EAAU;AAC3B,QAAIC,IAAI,GAAG,KAAX;AAD2B,QAGzBC,UAHyB,GAIvBF,IAJuB,CAGzBE,UAHyB;AAK3B,QAAMC,UAAU,GAAGpB,aAAa,CAACmB,UAAD,CAAhC;AACAD,IAAAA,IAAI,GAAGE,UAAU,CAACF,IAAlB;AACAhB,IAAAA,IAAI,CAACO,IAAL,CAAUS,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,GAAvB,CAAV;AACAnB,IAAAA,IAAI,GAAGA,IAAI,CAACS,MAAL,CAAYS,UAAU,CAACE,UAAvB,CAAP;AACA,QAAMC,QAAQ,wBAAiBL,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,GAAvB,CAAjB,eAAiDJ,IAAI,CAACO,IAAL,CAAUH,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAAjD,cAAgFJ,IAAI,CAACQ,OAArF,CAAd;AACAT,IAAAA,aAAa,CAACP,IAAd,CAAmBc,QAAnB;AACD,GAXD;AAaA,MAAMG,gBAAgB,GAAG1B,aAAa,CAACe,SAAS,CAACI,UAAX,CAAtC;AACA,MAAMQ,UAAU,GAAGD,gBAAgB,CAACR,IAAjB,CAAsBG,OAAtB,CAA8B,QAA9B,EAAwC,GAAxC,CAAnB;AACAnB,EAAAA,IAAI,CAACO,IAAL,CAAUkB,UAAV;AACAzB,EAAAA,IAAI,GAAGA,IAAI,CAACS,MAAL,CAAYe,gBAAgB,CAACJ,UAA7B,CAAP,CArB4E,CAuB5E;;AACA,MAAMM,eAAe,GAAG3B,aAAa,CAACC,IAAD,EAAOC,SAAP,CAArC;AAEA,MAAM0B,gBAAgB,uBAEnBhB,OAFmB,eAGtBG,aAAa,CAACc,IAAd,CAAmB,IAAnB,CAHsB,oCAIDH,UAJC,YAAtB;AAOA,SAAO;AACLE,IAAAA,gBAAgB,EAAhBA,gBADK;AAELD,IAAAA,eAAe,EAAfA;AAFK,GAAP;AAID","sourcesContent":["import { translateType } from './definitions';\n\nfunction deepStringify(refs, defObject, exist = {}) {\n  let result = [];\n  refs.forEach((ref) => {\n    if (!exist[ref]) {\n      const def = defObject[ref];\n      exist[ref] = true;\n      if (def) {\n        result.push(ref);\n        result = deepStringify(def.dependenceList, defObject, exist).concat(result);\n      }\n    }\n  });\n  return result;\n}\n\n/**\n * 名字\n * @param {*} funDesc 方法描述\n * @param {*} parameters 方法参数信息\n * @param {*} responses 方法返回结果\n * @param {*} defObject typedef的固定结构内容\n */\nexport default function jsdocParse(funDesc, parameters, responses, defObject) {\n  const parameDocList = [];\n  let refs = [];\n\n  // 参数jsdoc解析\n  parameters.forEach((item) => {\n    let type = 'any';\n    const {\n      entityName,\n    } = item;\n    const typeResult = translateType(entityName);\n    type = typeResult.type;\n    refs.push(type.replace(/[<|>]/g, '_'));\n    refs = refs.concat(typeResult.dependence);\n    const paramStr = ` * @param {${type.replace(/[<|>]/g, '_')}} ${item.name.replace(/-/g, '')} ${item.comment}`;\n    parameDocList.push(paramStr);\n  });\n\n  const returnTypeResult = translateType(responses.entityName);\n  const returnType = returnTypeResult.type.replace(/[<|>]/g, '_');\n  refs.push(returnType);\n  refs = refs.concat(returnTypeResult.dependence);\n\n  // 被引用的typedef\n  const typedefNameList = deepStringify(refs, defObject);\n\n  const paramsReturnLead = `\n/**\n * ${funDesc}\n${parameDocList.join('\\n')}\n * @returns {Promise<${returnType}>}\n */`;\n\n  return {\n    paramsReturnLead,\n    typedefNameList,\n  };\n}\n"],"file":"jsdocParse.js"}