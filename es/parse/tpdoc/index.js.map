{"version":3,"sources":["../../../src/parse/tpdoc/index.js"],"names":["definitionsParse","translateType","jsdocParse","parameter2requestInfo","parameters","headers","body","params","forEach","item","type","entityName","name","comment","annotation","required","info","description","push","parseInterfaceReal","api","defObject","code","funDesc","methods","paths","response","requestParams","method","length","codeList","split","funName","path","funParams","map","paramItem","leadDoc","paramsReturnLead","depadences","typedefNameList","parseInterface","interfaceInfos","result","getAllInterfaceInfoList","chapters","section","sections","apis","concat","tpdocParse","data","artifact","entities","interfaceList","basePath"],"mappings":"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","sourcesContent":["import { definitionsParse, translateType } from './definitions';\nimport jsdocParse from './jsdocParse';\n\nfunction parameter2requestInfo(parameters) {\n  const headers = [];\n  const body = [];\n  const params = [];\n\n  parameters.forEach((item) => {\n    const {\n      entityName: type, name, comment, annotation, required,\n    } = item;\n\n    const info = {\n      name,\n      description: comment,\n      required,\n      type: translateType(type).type,\n    };\n    switch (annotation) {\n      case '@RequestHeader':\n        headers.push(info);\n        break;\n      case '@RequestBody':\n        body.push(info);\n        break;\n      case '@RequestParam':\n        params.push(info);\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return {\n    headers,\n    body,\n    params,\n  };\n}\n\nfunction parseInterfaceReal(api = {}, defObject) {\n  const {\n    code,\n    name: funDesc,\n    methods = [],\n    paths = [],\n    response,\n    requestParams = [],\n  } = api;\n\n  const method = methods.length ? methods[0] : 'GET';\n  const codeList = code.split('\\.');\n  const funName = codeList[codeList.length - 1];\n  const path = paths.length ? paths[0] : '';\n\n  const funParams = requestParams.map((paramItem) => ({\n    name: paramItem.name,\n    required: paramItem.required,\n  }));\n\n  const {\n    paramsReturnLead: leadDoc,\n    typedefNameList: depadences,\n  } = jsdocParse(funDesc, requestParams, response, defObject);\n\n  // 获取headers,body,params\n  const {\n    headers,\n    body,\n    params,\n  } = parameter2requestInfo(requestParams);\n\n  return {\n    headers,\n    body,\n    params,\n    funParams,\n    leadDoc,\n    funName,\n    funDesc,\n    method,\n    path,\n    depadences,\n  };\n}\n\nfunction parseInterface(interfaceInfos = [], defObject) {\n  const result = [];\n  interfaceInfos.forEach((api) => {\n    result.push(parseInterfaceReal(api, defObject));\n  });\n  return result;\n}\n\nfunction getAllInterfaceInfoList(chapters = []) {\n  let result = [];\n  chapters.forEach((section) => {\n    const {\n      sections,\n      apis,\n    } = section;\n    if (sections) {\n      result = result.concat(getAllInterfaceInfoList(sections));\n    }\n    if (apis) {\n      result = result.concat(apis);\n    }\n  });\n\n  return result;\n}\n\n/**\n * tp-doc接口解析\n * @param {object} data 请求接口后的参数\n * @returns {import(\"..\").ParseInfo}\n */\nexport default function tpdocParse(data = {}) {\n  const {\n    artifact,\n    chapters,\n    entities,\n  } = data;\n\n  const defObject = definitionsParse(entities);\n\n  const interfaceInfos = getAllInterfaceInfoList(chapters);\n  const interfaceList = parseInterface(interfaceInfos, defObject);\n\n  return {\n    basePath: '/',\n    interfaceList,\n    defObject,\n  };\n}\n"],"file":"index.js"}