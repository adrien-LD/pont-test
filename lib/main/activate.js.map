{"version":3,"sources":["../../src/main/activate.js"],"names":["CONFIG_PATH","DEFAULT_PARSE_PATH","BASE_CATCH_PATH","CATCH_PATH","packageInfo","version","getOriginPick","config","originPickItems","origins","map","ori","label","name","description","originUrl","services","type","origin","Error","getServicePick","servicePickItems","serv","appId","detail","serve","old","service","getInterfacePick","interfaceList","interfacePickItems","inter","path","funDesc","funName","interfaceInfo","getServiceInfo","originName","serviceName","serviceAppId","serviceServe","httpPath","trim","toLowerCase","data","getTempPick","temps","tempPickItems","item","temp","root","Path","resolve","require","cache","func","execTempFun","fun","param","result","error","toString","getInterfaceUnExistDepandenceDocStr","dependences","fileText","defObject","lines","split","existList","results","forEach","line","lineInfo","exec","push","groups","dep","includes","defStr","join","getAllTypeDefStr","resultList","key","hasOwnProperty","element","activate","context","contextDisposable","vscode","commands","registerTextEditorCommand","textEditor","edit","rootPath","catchFilePath","FSExtra","existsSync","serviceInfo","JSON","stringify","interfacePick","tempFunc","serviceConfig","typeRefStr","depadences","document","getText","insertStr","insertSnippet","SnippetString","err","initDisposable","registerCommand","configPath","defaultParePath","PROJECT_CONFIG","PROJECT_FUNCTION","cleanDisposable","cleanPath","removeSync","allTypedefDisposable","window","activeTextEditor","allTypedefStr","subscriptions"],"mappings":"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","sourcesContent":["import vscode from 'vscode';\nimport Path from 'path';\nimport FSExtra from 'fs-extra';\nimport {\n  getProjectRoot,\n  readJSONFile,\n  sendErrorMessage,\n  openSelect,\n  writeFile,\n  sendMessage,\n} from '../utils';\nimport getHttpRequest from '../request';\nimport parse from '../parse';\nimport {\n  PROJECT_FUNCTION,\n  PROJECT_CONFIG,\n} from '../config';\nimport packageInfo from '../../package.json';\n\nconst CONFIG_PATH = './duoduo/duoduo.request.json';\nconst DEFAULT_PARSE_PATH = './duoduo/duoduo.request.js';\nconst BASE_CATCH_PATH = './.vscode/duoduo';\nconst CATCH_PATH = `${BASE_CATCH_PATH}/v${packageInfo.version}`;\n\nasync function getOriginPick(config) {\n  const originPickItems = config.origins.map((ori) => ({\n    label: ori.name,\n    description: ori.originUrl,\n    services: ori.services,\n    type: ori.type,\n  }));\n  const origin = await openSelect(originPickItems);\n  if (!origin) {\n    throw new Error('组织选择被取消');\n  }\n  return origin;\n}\n\nasync function getServicePick(services) {\n  const servicePickItems = services.map((serv) => ({\n    label: serv.name,\n    description: serv.appId,\n    detail: serv.serve,\n    old: { ...serv },\n  }));\n  const service = await openSelect(servicePickItems);\n  if (!service) {\n    throw new Error('服务选择被取消');\n  }\n  return service;\n}\n\nasync function getInterfacePick(interfaceList) {\n  const interfacePickItems = interfaceList.map((inter) => ({\n    label: inter.path,\n    description: inter.funDesc,\n    detail: inter.funName,\n    inter,\n  }));\n  const interfaceInfo = await openSelect(interfacePickItems);\n  if (!interfaceInfo) {\n    throw new Error('接口选择被取消');\n  }\n  return interfaceInfo;\n}\n\nasync function getServiceInfo(origin, service) {\n  const {\n    label: originName,\n    description: originUrl,\n    type,\n  } = origin;\n\n  const {\n    label: serviceName,\n    description: serviceAppId,\n    detail: serviceServe,\n  } = service;\n  // 获取信息\n  let httpPath;\n  if (type.trim().toLowerCase() === 'swagger2.0') {\n    httpPath = `${originUrl}docs` + `/${serviceAppId}`;\n  }\n  switch (type.trim().toLowerCase()) {\n    case 'swagger2.0':\n      httpPath = `${originUrl}docs` + `/${serviceAppId}`;\n      break;\n    case 'tp-doc':\n      httpPath = `${originUrl}api/doc/${serviceServe}:${serviceAppId}/`;\n      break;\n\n    default:\n      throw new Error('配置文件有误，请重新初始化！');\n  }\n  const data = await getHttpRequest(httpPath);\n  return data;\n}\n\nasync function getTempPick(config) {\n  const {\n    temps = [],\n  } = config;\n\n  const tempPickItems = temps.map((item) => ({\n    label: item.name,\n    path: item.path,\n  }));\n  const temp = await openSelect(tempPickItems);\n\n  if (!temp) {\n    throw new Error('模板选择被取消');\n  }\n\n  const root = getProjectRoot();\n  const path = Path.resolve(root, temp.path);\n  // 去除缓存\n  delete require.cache[require.resolve(path)];\n  const func = require(path);\n\n  return func;\n}\n\n/**\n * 执行模板方法\n * @param {Function} fun 模板方法\n * @param {any} param 方法参数\n */\nfunction execTempFun(fun, param) {\n  try {\n    const result = fun(param);\n    return result;\n  } catch (error) {\n    throw new Error(`模板文件错误:${error.toString()}`);\n  }\n}\n\n/**\n * 获取当前文件不存在的依赖的doc字符串\n * @param {object[]} dependences 依赖列表\n * @param {String} fileText 当前文件的内容\n * @param {object} defObject 类型定义对象\n */\nfunction getInterfaceUnExistDepandenceDocStr(dependences, fileText, defObject) {\n  const lines = fileText.split('\\n');\n  const existList = [];\n  const results = [];\n  lines.forEach((line) => {\n    const lineInfo = (/\\*\\s+\\@typedef\\s+(?<type>\\S*).*$/g).exec(line);\n    if (lineInfo) {\n      existList.push(lineInfo.groups.type);\n    }\n  });\n\n  dependences.forEach((dep) => {\n    if (!existList.includes(dep)) {\n      results.push(defObject[dep].defStr);\n    }\n  });\n\n  return results.join('\\n');\n}\n\n/**\n * 获取所有的typedef\n * @param {Object} defObject 类型定义对象\n */\nfunction getAllTypeDefStr(defObject) {\n  const resultList = [];\n\n  for (const key in defObject) {\n    if (defObject.hasOwnProperty(key)) {\n      if (defObject[key]) {\n        const element = defObject[key].defStr;\n        resultList.push(element);\n      }\n    }\n  }\n\n  return resultList.join('\\n');\n}\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nexport default async function activate(context) {\n  // 插入单个接口\n  const contextDisposable = vscode.commands.registerTextEditorCommand('duoduorequest.insertModuleRequest', async (textEditor, edit) => {\n    try {\n      const rootPath = getProjectRoot();\n      const config = await readJSONFile(Path.resolve(rootPath, CONFIG_PATH));\n      // 确定本次获取的组织\n      const origin = await getOriginPick(config);\n      const {\n        type,\n        services,\n      } = origin;\n      // 确定本次生成的服务\n      const service = await getServicePick(services);\n\n      // 获取接口信息\n      /**\n       * @type {import('../parse').ParseInfo}\n       */\n      let interfaceInfo;\n      const catchFilePath = Path.resolve(rootPath, CATCH_PATH, `${service.description}.json`);\n      if (FSExtra.existsSync(catchFilePath)) {\n        interfaceInfo = await readJSONFile(catchFilePath);\n      } else {\n        // 获取接口信息\n        const serviceInfo = await getServiceInfo(origin, service);\n        // 解析对应接口信息\n        interfaceInfo = parse(serviceInfo, type);\n        // 存储接口信息\n        writeFile(catchFilePath, JSON.stringify(interfaceInfo));\n      }\n\n      // 选择对应接口\n      const {\n        interfaceList,\n      } = interfaceInfo;\n      const interfacePick = await getInterfacePick(interfaceList);\n      const {\n        inter,\n      } = interfacePick;\n      // 选择对应的模板\n      const tempFunc = await getTempPick(config);\n      // 将所选服务配置添加进去\n      inter.serviceConfig = service.old;\n      // 根据当前文件情况处理接口信息\n      inter.typeRefStr = getInterfaceUnExistDepandenceDocStr(\n        inter.depadences, textEditor.document.getText(), interfaceInfo.defObject,\n      );\n      // 根据选择的模板生成字符串\n      const insertStr = execTempFun(tempFunc, inter);\n      // 将字符串插入当前位置\n      textEditor.insertSnippet(new vscode.SnippetString(insertStr));\n    } catch (err) {\n      sendErrorMessage(err.toString());\n    }\n  });\n\n  // 初始化配置\n  const initDisposable = vscode.commands.registerCommand('duoduorequest.insertConfig', async () => {\n    const rootPath = getProjectRoot();\n    const configPath = Path.resolve(rootPath, CONFIG_PATH);\n    const defaultParePath = Path.resolve(rootPath, DEFAULT_PARSE_PATH);\n    if (FSExtra.existsSync(configPath)) {\n      sendErrorMessage('配置文件已存在');\n      return;\n    }\n\n    writeFile(configPath, PROJECT_CONFIG);\n\n    writeFile(defaultParePath, PROJECT_FUNCTION);\n  });\n\n  // 清除缓存\n  const cleanDisposable = vscode.commands.registerCommand('duoduorequest.cleanCatch', async () => {\n    const rootPath = getProjectRoot();\n    const cleanPath = Path.resolve(rootPath, BASE_CATCH_PATH);\n\n    FSExtra.removeSync(cleanPath);\n\n    sendMessage('缓存清除成功！');\n  });\n\n  // 插入所有typedef\n  const allTypedefDisposable = vscode.commands.registerCommand('duoduorequest.insertAllTypedef', async () => {\n    try {\n      const textEditor = vscode.window.activeTextEditor;\n      const rootPath = getProjectRoot();\n      const config = await readJSONFile(Path.resolve(rootPath, CONFIG_PATH));\n      // 确定本次获取的组织\n      const origin = await getOriginPick(config);\n      const {\n        type,\n        services,\n      } = origin;\n      // 确定本次生成的服务\n      const service = await getServicePick(services);\n\n      // 获取接口信息\n      /**\n       * @type {import('../parse').ParseInfo}\n       */\n      let interfaceInfo;\n      const catchFilePath = Path.resolve(rootPath, CATCH_PATH, `${service.description}.json`);\n      if (FSExtra.existsSync(catchFilePath)) {\n        interfaceInfo = await readJSONFile(catchFilePath);\n      } else {\n        // 获取接口信息\n        const serviceInfo = await getServiceInfo(origin, service);\n        // 解析对应接口信息\n        interfaceInfo = parse(serviceInfo, type);\n        // 存储接口信息\n        writeFile(catchFilePath, JSON.stringify(interfaceInfo));\n      }\n\n      const { defObject } = interfaceInfo;\n      // 所有typedef\n      const allTypedefStr = getAllTypeDefStr(defObject);\n      // 插入到当前位置\n      textEditor.insertSnippet(new vscode.SnippetString(allTypedefStr));\n    } catch (err) {\n      sendErrorMessage(err.toString());\n    }\n  });\n  context.subscriptions.push(contextDisposable);\n  context.subscriptions.push(initDisposable);\n  context.subscriptions.push(cleanDisposable);\n  context.subscriptions.push(allTypedefDisposable);\n}\n"],"file":"activate.js"}