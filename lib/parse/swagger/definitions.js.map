{"version":3,"sources":["../../../src/parse/swagger/definitions.js"],"names":["translateType","type","typeReal","trim","toLowerCase","getTypedefStrLine","name","refInfo","leadStr","typeStr","refLead","dependenceList","objStrList","properties","additionalProperties","prop","hasOwnProperty","element","addLeadStr","propStr","depe","concat","push","replace","$ref","list","split","splitRefStr","length","join","arrType","items","refStrSpliteList","refRealStr","getTypedefObj","ref","defStr","definitionsParse","definitions","result","defKey","defInfo","typedefObj","module","exports"],"mappings":"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","sourcesContent":["import { uniqueArr } from '../utils';\n\nfunction translateType(type) {\n  if (!type) return 'any';\n  const typeReal = type.trim().toLowerCase();\n  switch (typeReal) {\n    case 'integer':\n    case 'float':\n    case 'double':\n      return 'number';\n    default:\n      break;\n  }\n  return type;\n}\n\nfunction getTypedefStrLine(name, refInfo, leadStr) {\n  if (!refInfo) return {};\n  const typeStr = refInfo.type;\n  const type = typeStr ? typeStr.trim().toLowerCase() : '$ref';\n  let refLead = '';\n  let dependenceList = [];\n\n  switch (type) {\n    case 'object':\n      let objStrList = name ? [` * @property {Object} ${leadStr + name}`] : [];\n      const {\n        properties, additionalProperties,\n      } = refInfo;\n      for (const prop in properties) {\n        if (properties.hasOwnProperty(prop)) {\n          const element = properties[prop];\n          const addLeadStr = leadStr + name ? `${leadStr + name}.` : '';\n          const {\n            refLead: propStr,\n            dependenceList: depe,\n          } = getTypedefStrLine(prop, element, addLeadStr);\n          dependenceList = dependenceList.concat(depe);\n          objStrList.push(propStr);\n        }\n      }\n\n      if (additionalProperties) {\n        if (additionalProperties.type) {\n          objStrList = [` * @property {Map<string, ${additionalProperties.type}>} ${leadStr + name}`];\n          dependenceList.push(additionalProperties.type.replace(/[«|»|,]/g, '_'));\n        }\n        if (additionalProperties.$ref) {\n          const list = additionalProperties.$ref.split('/');\n          const splitRefStr = list[list.length - 1].replace(/[«|»|,]/g, '_');\n          objStrList = [` * @property {${splitRefStr}} ${leadStr + name}`];\n          dependenceList.push(splitRefStr);\n        }\n      }\n      refLead = objStrList.join('\\n');\n      break;\n    case 'array':\n      let arrType = refInfo.items.type;\n      if (!arrType) {\n        const refStrSpliteList = refInfo.items.$ref.split('/');\n        arrType = refStrSpliteList[refStrSpliteList.length - 1].replace(/[«|»|,]/g, '_');\n        dependenceList.push(arrType);\n      }\n      refLead = ` * @property {${translateType(arrType)}[]} ${leadStr + name}`;\n      break;\n    case '$ref':\n      const refStrSpliteList = refInfo.$ref.split('/');\n      const refRealStr = refStrSpliteList[refStrSpliteList.length - 1].replace(/[«|»|,]/g, '_');\n      dependenceList.push(refRealStr);\n      refLead = ` * @property {${refRealStr}} ${leadStr + name}`;\n      break;\n    case 'string':\n    case 'boolean':\n    case 'integer':\n      refLead = ` * @property {${translateType(type)}} ${leadStr + name}`;\n      break;\n    default:\n      dependenceList.push(type);\n      refLead = ` * @property {${translateType(type)}} ${leadStr + name}`;\n  }\n  return {\n    refLead,\n    dependenceList,\n  };\n}\n\n/**\n * 获取引用的jsdoc字符串和依赖\n * @param {string} ref 引用的名称\n * @param {any} refInfo\n */\nfunction getTypedefObj(ref, refInfo) {\n  const {\n    refLead,\n    dependenceList,\n  } = getTypedefStrLine('', refInfo, '');\n\n  if (!refLead) {\n    return null;\n  }\n\n  const defStr = `\n/**\n * @typedef ${ref.replace(/[«|»|,]/g, '_')}\n${refLead}\n */`;\n\n  return {\n    defStr,\n    dependenceList: uniqueArr(dependenceList),\n  };\n}\n\nfunction definitionsParse(definitions) {\n  const result = {};\n\n  for (const defKey in definitions) {\n    if (definitions.hasOwnProperty(defKey)) {\n      const defInfo = definitions[defKey];\n      const typedefObj = getTypedefObj(defKey, defInfo);\n      if (typedefObj) {\n        result[defKey.replace(/[«|»|,]/g, '_')] = typedefObj;\n      }\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = definitionsParse;\n"],"file":"definitions.js"}